orfstops <- orfstops[indices]
# Find the lengths of the ORFs that we have
orflengths <- numeric()
numorfs <- length(orfstarts)
for (i in 1:numorfs)
{
orfstart <- orfstarts[i]
orfstop <- orfstops[i]
orflength <- orfstop - orfstart + 1
orflengths <- append(orflengths,orflength,after=length(orflengths))
}
mylist <- list(orfstarts, orfstops, orflengths)
return(mylist)
}
findORFsinSeq(s1)
seq <- read.fasta(file = "Strep.fasta")
library("seqinr")
seq <- read.fasta(file = "Strep.fasta")
seq <- read.fasta(file = "Strep.fasta")
trueseq <- seq[[1]]
trueseq
stringseq <- c2c(truesqe)
seq <- getncbiseq("NZ_JFIS01000023")
stringseq <- c2s(trueseq)
findORFsinSeq(stringseq)
lenghts = findORFsinSeq(stringseq)[[3]]
lenghts
order(lenghts)
lenghts
sort(lenghts)
length(seq)
length(trueseq)
lengths <- sort(lenghts)
getNumber <- function(vector, int)
{
count=0
for(i in vector){
if (i>=int) {
count=count+1
}
}
return count
}
getNumber <- function(vector, int)
{
count=0
for(i in vector){
if (i>=int) {
count=count+1
}
}
return(count)
}
getNumber(lengths,10)
getNumber(lengths,50)
getNumber(lengths,100)
getNumber(lengths,300)
getNumber(lengths,500)
rss <- tolower(as.character(reverseComplement(DNAStringSet(stringseq))[[1]])
rss <- tolower(as.character(reverseComplement(DNAStringSet(stringseq))[[1]]))
rss
newl = findORFsinSeq(stringseq)[[3]]
getNumber(newl,10)
getNumber(newl,50)
getNumber(newl,100)
newl = findORFsinSeq(rss)[[3]]
getNumber(newl,10)
getNumber(newl,50)
getNumber(newl,100)
getNumber(newl,300)
getNumber(newl,500)
sample(stringseq,length(stringseq))
unlist(strsplit(stringseq, split=""))
vectorseq <- unlist(strsplit(stringseq, split=""))
randomseq <- sample(vectorseq,length(vectorseq))
randomseq <- c(randomseq)
randomseq <- c2s(randomseq)
rrs <- tolower(as.character(reverseComplement(DNAStringSet(randomseq))[[1]]))
newrl = findORFsinSeq(randomseq)[[3]]
getNumber(newrl,10)
getNumber(newrl,50)
getNumber(newrl,100)
getNumber(newrl,300)
getNumber(newrl,500)
sort(newrl)
newrl = findORFsinSeq(rrs)[[3]]
sort(newrl)
sort(newl)
getNumber(newl,624)
getNumber(newl,372)
getNumber(lengths,372)
bigdata = c(lengths,newl)
bigdata = sort(bigdata)
bigdata
getNumber(bigdata,372)
getNumber(bigdata,633)
newl = findORFsinSeq(randomseq)[[3]]
randombigdata = c(newl,newrl)
sort(randombigdata)
getNumber(bigdata,252)
getNumber(bigdata,624)
getNumber(findORFsinSeq(stringseq)[[3]],2000)
exo4 -> findORFsinSeq(stringseq)
exo4 <- findORFsinSeq(stringseq)
sort(exo4[[3]])
exo4[[3]]
exo4[[1]]
exo4[[2]]
exo4[[1]]
exo4[[3]]
exo4[[1]][213]
exo4[[2]][213]
exo4[[3]][213]
7748%%3
stringseq[7748,10102]
stringse([7748,10102)
substr(stringseq,7748,10102)
getNumber(bigdata,252)
getNumber(bigdata,372)
substr("abcdef", 2, 4)
strinseq
stringseq
labs(color="Solver")
# Uncomment the following line to install ggplot2, install only one time the package!
install.packages("ggplot2")
library('ggplot2')
results <- read.csv(file="Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Solver")
# Uncomment the following line to install ggplot2, install only one time the package!
install.packages("ggplot2")
library('ggplot2')
results <- read.csv(file="/../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Solver")
library('ggplot2')
results <- read.csv(file="/../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Solver")
library('ggplot2')
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Solver")
setwd("~/")
setwd("~/")
setwd("C:\Users\victor\git\flow_algorithm_new\java\results\resultsBySolver")
setwd("C:/Users/victor/git/flow_algorithm_new/r")
library('ggplot2')
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Solver")
library('ggplot2')
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Solver") +
title('Edmonds-Karp1')
library('ggplot2')
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
main('Edmonds-Karp1')
library('ggplot2')
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'LL')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HM')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'SA')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TM')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SM')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle('Edmonds-Karp Instance 1')
library('ggplot2')
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp1.csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle('Edmonds-Karp Instance 1')
library('ggplot2')
i=1
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp"+i+".csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle('Edmonds-Karp Instance '+i)
library('ggplot2')
i=1
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp"+str(i)+".csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle('Edmonds-Karp Instance '+str(i))
i
str(i)
library('ggplot2')
i='1'
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp"+i+".csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle('Edmonds-Karp Instance '+i)
i="1"
results <- read.csv(file="../java/results/resultsBySolver/Edmonds-Karp"+i+".csv", head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle('Edmonds-Karp Instance '+i)
i
"test"+i
"test"+as.charecter(i)
"test"+as.character(i)
"test"+toString(i)
c("test",1,".csv")
t=c("test",1,".csv")
toString(t)
paste(t)
toString(paste(t))
paste(t, collapse=" ")
paste(t, collapse="")
instance=1
solver="Edmonds-Karp"
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
title = paste(c(solver, "Instance ", instance), collapse="")
ggtitle(title)
instance=1
solver="Edmonds-Karp"
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, "Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle(title)
library('ggplot2')
instance=1
solver="Edmonds-Karp"
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle(title)
instance=1
solver="Edmonds-Karp"
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('density') +
ylab('time (ms)') +
labs(color="Data structure") +
ggtitle(title)
instance=1
solver="Edmonds-Karp"
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('Density of edges') +
ylab('Time (ms)') +
labs(color="Data structure") +
ggtitle(title)
instance=2
solver="Edmonds-Karp"
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('Density of edges') +
ylab('Time (ms)') +
labs(color="Data structure") +
ggtitle(title)
instance=3
solver="Edmonds-Karp"
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('Density of edges') +
ylab('Time (ms)') +
labs(color="Data structure") +
ggtitle(title)
instances=c(1,2,3)
solvers=c("Edmonds-Karp","FIFO Push-Relabel","Ford-Fulkerson Scaling","Push-Relabel")
for (instance in instances){
for (solver in solvers){
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('Density of edges') +
ylab('Time (ms)') +
labs(color="Data structure") +
ggtitle(title)
}
}
instances=c(1,2,3)
solvers=c("Edmonds-Karp","FIFO Push-Relabel","Ford-Fulkerson Scaling","Push-Relabel")
for (instance in instances){
for (solver in solvers){
print("OK")
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('Density of edges') +
ylab('Time (ms)') +
labs(color="Data structure") +
ggtitle(title)
}
}
instances=c(1,2,3)
solvers=c("Edmonds-Karp","FIFO Push-Relabel","Ford-Fulkerson Scaling","Push-Relabel")
for (instance in instances){
for (solver in solvers){
print("OK")
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
filename = paste(c(title,".png"), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('Density of edges') +
ylab('Time (ms)') +
labs(color="Data structure") +
ggtitle(title)
ggsave(file=filename)
}
}
instances=c(1,2,3)
solvers=c("Edmonds-Karp","FIFO Push-Relabel","Ford-Fulkerson Scaling","Push-Relabel")
for (instance in instances){
for (solver in solvers){
print("OK")
f = paste(c("../java/results/resultsBySolver/", solver, instance,".csv"), collapse="")
title = paste(c(solver, " Instance ", instance), collapse="")
filename = paste(c("../graphiques/",title,".png"), collapse="")
results <- read.csv(file=f, head=TRUE, sep=",")
attach(results)
ggplot() +
geom_line(data = results, aes(x = Instances, y = LinkedList, color = 'Linked List')) +
geom_line(data = results, aes(x = Instances, y = HashMap, color = 'HashMap')) +
geom_line(data = results, aes(x = Instances, y = SplitArray, color = 'Split Array')) +
geom_line(data = results, aes(x = Instances, y = TreeMap, color = 'TreeMap')) +
geom_line(data = results, aes(x = Instances, y = SparseMap, color = 'SparseMap')) +
xlab('Density of edges') +
ylab('Time (ms)') +
labs(color="Data structure") +
ggtitle(title)
ggsave(file=filename)
}
}
